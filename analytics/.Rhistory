install.packages('matrix')
install.packages('Matrix')
library('Matrix')
library(ada)
?adaboost.MM
install.packages('adabag')
library('adabag')
install.packages('ggplot2')
install.packages('reshape2')
install.packages('plyr')
install.packages("plyr")
install.packages('plyr)')
install.packages("plyr")
setwd("~/Documents/Rice/senior/HashTagSwipeRight/knn_code_R")
install.packages('gplots')
library('gplots')
gender_file = '../data/gender.csv'
rating_file = '../data/ratings.csv'
id_file = '../data/IDMap.csv'
dist_file = '../'
ratings = read.table(rating_file, header=TRUE, sep=",")
idmap = read.table(id_file, header=TRUE, sep=",")
gender = read.table(gender_file, header=TRUE, sep=",")
rmat = sparseMatrix(i=ratings[,1],j=ratings[,2],x=ratings[,3])
library('Matrix')
rmat = sparseMatrix(i=ratings[,1],j=ratings[,2],x=ratings[,3])
Pnum = apply(rmat!=0,2,sum)
Psum = apply(rmat,2,sum)
Pmeans = Psum / Pnum
plot(Pnum, Pmeans, main='Number of ratings vs Average Rating', xlab='Number of Ratings', ylab='Average Rating', pch=19)
cor(Pmeans,Pnum)
ratings_total = rep(0,10)
ratings_male = rep(0,10)
ratings_female = rep(0,10)
for(i in 1:10){
ratings_total[i] = length(ratings[which(ratings[,3]==i),3])
ratings_male[i] = length(ratings[which(ratings[,3]==i & gender[,2]=='M')])
ratings_female[i] = length(ratings[which(ratings[,3]==i & gender[,2]=='F')])
}
i
ratings_total[i] = length(ratings[which(ratings[,3]==i),3])
ratings_total
ratings_male[i] = length(ratings[which(ratings[,3]==i & gender[,2]=='M')])
length(gender[,2])
length(ratings[,3])
ratings_male[i] = length(ratings[which(ratings[,3]==i & gender[ratings[,1],2]=='M')])
row_gender = gender[ratings[,1],2]
row_gender[1]
row_gender[2]
row_gender[3]
row_gender[4]
row_gender[5]
row_gender[6]
row_gender[7]
row_gender[8]
row_gender[9]
row_gender[10]
row_gender[11]
row_gender[12]
row_gender[13]
row_gender[14]
row_gender[15]
row_gender[16]
row_gender[17]
row_gender[18]
row_gender[98]
row_gender[988]
which(row_gender ==)
length(which(row_gender =='M'))
length(which(row_gender =='F'))
length(which(row_gender =='M'))/10000
length(which(row_gender =='F'))/10000
length(row_gender)
length(ratings)
length(ratings)
length(ratings[,1])
length(which(row_gender =='U'))
row_gender[4]
gender = read.table(gender_file, header=TRUE, sep=",")
gender[1]
head(gender)
gender[4,2]
gender[4,1]
gender[4,2]
gender[5,2]
head(ratings)
rating_gender = gender[ratings[,1],2]
length(rating_gender==M)/length(rating_gender)
length(rating_gender=='M')/length(rating_gender)
length(which(rating_gender=='M'))/length(rating_gender)
length(which(rating_gender=='F'))/length(rating_gender)
length(which(rating_gender=='U'))/length(rating_gender)
ratings_total = rep(0,10)
ratings_male = rep(0,10)
ratings_female = rep(0,10)
for(i in 1:10){
ratings_total[i] = length(ratings[which(ratings[,3]==i),3])
ratings_male[i] = length(ratings[which(ratings[,3]==i & rating_gender=='M')])
ratings_female[i] = length(ratings[which(ratings[,3]==i & rating_gender=='F')])
}
i
ratings_male[i] = length(ratings[which(ratings[,3]==i) & which(rating_gender=='M')])
length(rating_gender)
length(ratings[,3])
which(ratings[,3]==i)
length(which(ratings[,3]==i) )
ratings[,3]==i & rating_gender=='M'
length(which(ratings[,3]==i rating_gender=='M'))
length(which(ratings[,3]==i, rating_gender=='M'))
length(rating_gender)
length(which(ratings[,3]==i & rating_gender=='M'))
length(which(rating_gender=='M'))
length(which(ratings[,3]==i & rating_gender=='M'))
ratings_male[i] = length(which(ratings[,3]==i & rating_gender=='M'))
ratings_male[i] = length(ratings[which(ratings[,3]==i & rating_gender=='M')])
ratings_total
length(which(ratings[,3]==i))
for(i in 1:10){
ratings_total[i] = length(which(ratings[,3]==i))
ratings_male[i] = length(which(ratings[,3]==i & rating_gender=='M'))
ratings_female[i] = length(which(ratings[,3]==i & rating_gender=='F'))
}
ratings_total
ratings_male
ratings_female
plot(1:10,ratings_total, type='o', col='black', main="Histogram of Ratings", xlab="Rating", ylab="Count")
lines(1:10, ratings_male, type='o', col='red')
lines(1:10, ratings_female, type='o', col='blue')
smartlegend(x="right",y="top", c('Total','Male','Female'), lty=c(1,1,1), col=c('black','red','blue'))
r_t = cbind(ratings_total, ratings_male, ratings_female)
ylim = c(min(r_t), max(r_t))
ylim
r_t = cbind(ratings_total, ratings_male, ratings_female)
ylim = c(min(r_t), max(r_t))
plot(1:10,ratings_total, type='o', col='black', main="Histogram of Ratings", xlab="Rating", ylab="Count", ylim=ylim)
lines(1:10, ratings_male, type='o', col='red')
lines(1:10, ratings_female, type='o', col='blue')
ratings_total = ratings_total / sum(ratings_total)
ratings_male = ratings_male / sum(ratings_male)
ratings_female = ratings_female / sum(ratings_female)
plot(1:10,ratings_total, type='o', col='black', main="Distribution of Ratings", xlab="Rating", ylab="Count", ylim=c(0,1))
lines(1:10, ratings_male, type='o', col='red')
lines(1:10, ratings_female, type='o', col='blue')
smartlegend(x="right",y="top", c('Total','Male','Female'), lty=c(1,1,1), col=c('black','red','blue'))
ratings_total = ratings_total / sum(ratings_total)
ratings_male = ratings_male / sum(ratings_male)
ratings_female = ratings_female / sum(ratings_female)
r_t = cbind(ratings_total, ratings_male, ratings_female)
ylim = c(min(r_t), max(r_t))
plot(1:10,ratings_total, type='o', col='black', main="Distribution of Ratings", xlab="Rating", ylab="Count", ylim=c(0,1))
lines(1:10, ratings_male, type='o', col='red')
lines(1:10, ratings_female, type='o', col='blue')
smartlegend(x="right",y="top", c('Total','Male','
ratings_total = ratings_total / sum(ratings_total)
ratings_male = ratings_male / sum(ratings_male)
ratings_female = ratings_female / sum(ratings_female)
r_t = cbind(ratings_total, ratings_male, ratings_female)
ylim = c(min(r_t), max(r_t))
plot(1:10,ratings_total, type='o', col='black', main="Distribution of Ratings", xlab="Rating", ylab="Count", ylim=ylim)
lines(1:10, ratings_male, type='o', col='red')
lines(1:10, ratings_female, type='o', col='blue')
smartlegend(x="right",y="top", c('Total','Male','Female'), lty=c(1,1,1), col=c('black','red','blue'))
ratings_total = ratings_total / sum(ratings_total)
ratings_male = ratings_male / sum(ratings_male)
ratings_female = ratings_female / sum(ratings_female)
r_t = cbind(ratings_total, ratings_male, ratings_female)
ylim = c(min(r_t), max(r_t))
ylim
plot(1:10,ratings_total, type='o', col='black', main="Distribution of Ratings", xlab="Rating", ylab="Count", ylim=ylim)
lines(1:10, ratings_male, type='o', col='red')
lines(1:10, ratings_female, type='o', col='blue')
smartlegend(x="right",y="top", c('Total','Male','Female'), lty=c(1,1,1), col=c('black','red','blue'))
num_rat_total = apply(rmat!=0,1,sum)
num_rat_male = apply(rmat[which(gender[,2]=='M')]!=0,1,sum)
num_rat_male = apply(rmat[which(gender[,2]=='M'),]!=0,1,sum)
num_rat_femle = apply(rmat[which(gender[,2]=='F'),]!=0,1,sum)
num_rat_male = apply(rmat[which(gender[,2]=='M'),]!=0,1,sum)
num_rat_female = apply(rmat[which(gender[,2]=='F'),]!=0,1,sum)
r_t = cbind(num_rat_total, num_rat_male, num_rat_female)
ylim = c(min(r_t), max(r_t))
plot(1:10,num_rat_total, type='o', col='black', main="Histogram of Number of Ratings", xlab="Number of Ratings", ylab="Count", ylim=ylim)
lines(1:10, num_rat_male, type='o', col='red')
lines(1:10, num_rat_female, type='o', col='blue')
smartlegend(x="right",y="top", c('Total','Male','Female'), lty=c(1,1,1), col=c('black','red','blue'))
num_rat_total = apply(rmat!=0,1,sum)
num_rat_male = apply(rmat[which(gender[,2]=='M'),]!=0,1,sum)
num_rat_female = apply(rmat[which(gender[,2]=='F'),]!=0,1,sum)
r_t = cbind(num_rat_total, num_rat_male, num_rat_female)
dim(num_rat_total)
length(num_rat_total)
length(num_rat_male)
length(num_rat_female)
r_t = cbind(num_rat_total, num_rat_male, num_rat_female)
num_rat_male = apply(rmat[which(gender[,2]=='M'),]!=0,1,sum)
length(num_rat_male)
dim(num_rat_male)
r_t = rbind(num_rat_total, num_rat_male, num_rat_female)
?cbind
r_t = c(num_rat_total, num_rat_male, num_rat_female)
r_t = c(num_rat_total, num_rat_male, num_rat_female)
ylim = c(min(r_t), max(r_t))
ylim
plot(1:10,num_rat_total, type='o', col='black', main="Histogram of Number of Ratings", xlab="Number of Ratings", ylab="Count", ylim=ylim)
hist(num_rat_total)
hist(num_rat_total,breaks=100)
hist(num_rat_total,breaks=200)
hist(num_rat_total,breaks=300)
hist(num_rat_total,breaks=500)
hist(num_rat_male,breaks=500)
hist(num_rat_female,breaks=500)
max(num_rat_total)
which(num_rat_total==4247)
max(num_rat_total[-4462])
mode(num_rat_total)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
Mode(num_rat_total)
Mode(num_rat_male)
Mode(num_rat_female)
mean(num_rat_total)
var(num_rat_total)
sqrt(var(num_rat_total))
install.packages('ggplot')
install.packages('ggplot2')
num_rat_total = data.frame(apply(rmat!=0,1,sum))
?ggplot
library(ggplot2)
?ggplot
num_rat_total = data.frame(num = apply(rmat!=0,1,sum))
num_rat_total$a <- 'total'
num_rat_male = data.frame(num = apply(rmat[which(gender[,2]=='M'),]!=0,1,sum))
num_rat_male$a <- 'male'
num_rat_female = data.frame(num = apply(rmat[which(gender[,2]=='F'),]!=0,1,sum))
num_rat_female$a <- 'female'
num_rat <- rbind(num_rat_total, num_rat_male, num_rat_female)
ggplot(num_rat, aes(num, fill=a) + geom_density(alpha=0.2))
ggplot(num_rat, aes(num, fill=a)) + geom_density(alpha=0.2))
ggplot(num_rat, aes(num, fill=a))
ggplot(num_rat, aes(num, fill = a)) + geom_density(alpha = 0.2)
ggplot(num_rat, aes(num, fill = a)) + geom_density(alpha = 0.2) + labs(title="Number of Profiles Rated", x="Profiles Rated", y="Density")
ggplot(num_rat, aes(num, fill = a)) + geom_density(alpha = 0.2) + labs(title="Number of Profiles Rated", x="Profiles Rated", y="Density") + xlim(0,2000)
ggplot(num_rat, aes(num, fill = a)) + geom_density(alpha = 0.2) + labs(title="Number of Profiles Rated", x="Profiles Rated", y="Density") + xlim(0,1500)
ggplot(num_rat, aes(num, fill = a)) + geom_density(alpha = 0.2) + labs(title="Number of Profiles Rated", x="Profiles Rated", y="Density") + xlim(0,1000)
ggplot(num_rat, aes(num, fill = a)) + geom_density(alpha = 0.2) + labs(title="Number of Profiles Rated", x="Profiles Rated", y="Density") + xlim(0,750)
ggplot(num_rat, aes(num, fill = a)) + geom_density(alpha = 0.2) + labs(title="Number of Profiles Rated", x="Profiles Rated", y="Density") + xlim(0,500)
ratings_total = rep(0,10)
ratings_male = rep(0,10)
ratings_female = rep(0,10)
rating_gender = gender[ratings[,1],2]
for(i in 1:10){
ratings_total[i] = length(which(ratings[,3]==i))
ratings_male[i] = length(which(ratings[,3]==i & rating_gender=='M'))
ratings_female[i] = length(which(ratings[,3]==i & rating_gender=='F'))
}
r_t = c(ratings_total, ratings_male, ratings_female)
ylim = c(min(r_t), max(r_t))
rat_total = data.frame(val = ratings_total); rat_total$a = 'Total'
rat_male = data.frame(val = ratings_male); rat_male$a = 'Male'
rat_female = data.frame(val = ratings_female); rat_female$a = 'Female'
rat_count <- rbind(r_total, rat_male, rat_female)
ggplot(rat_count, aes(val, fill = a)) + geom_density(alpha = 0.2) + labs(title="Distribution of Ratings", x="Ratings", y="Density")
rat_count <- rbind(rat_total, rat_male, rat_female)
ggplot(rat_count, aes(val, fill = a)) + geom_density(alpha = 0.2) + labs(title="Distribution of Ratings", x="Ratings", y="Density")
plot(1:10,ratings_total, type='o', col='black', main="Histogram of Ratings", xlab="Rating", ylab="Count", ylim=ylim)
lines(1:10, ratings_male, type='o', col='red')
lines(1:10, ratings_female, type='o', col='blue')
smartlegend(x="right",y="top", c('Total','Male','Female'), lty=c(1,1,1), col=c('black','red','blue'))
ratings_total = ratings_total / sum(ratings_total)
ratings_male = ratings_male / sum(ratings_male)
ratings_female = ratings_female / sum(ratings_female)
r_t = c(ratings_total, ratings_male, ratings_female)
ylim = c(min(r_t), max(r_t))
plot(1:10,ratings_total, type='o', col='black', main="Distribution of Ratings", xlab="Rating", ylab="Count", ylim=ylim)
lines(1:10, ratings_male, type='o', col='red')
lines(1:10, ratings_female, type='o', col='blue')
smartlegend(x="right",y="top", c('Total','Male','Female'), lty=c(1,1,1), col=c('black','red','blue'))
rat_total = data.frame(val = ratings[,3]); rat_total$a = 'Total'
rat_male = data.frame(val = ratings[which(rating_gender=='M',arr.ind=TRUE),3]); rat_male$a = 'Male'
rat_female = data.frame(val = ratings[which(rating_gender=='F',arr.ind=TRUE),3]); rat_female$a = 'Female'
rat_count <- rbind(rat_total, rat_male, rat_female)
ggplot(rat_count, aes(val, fill = a)) + geom_density(alpha = 0.2) + labs(title="Distribution of Ratings", x="Ratings", y="Density")
# VALUES OF RATINGS
ratings_total = rep(0,10)
ratings_male = rep(0,10)
ratings_female = rep(0,10)
rating_gender = gender[ratings[,1],2]
for(i in 1:10){
ratings_total[i] = length(which(ratings[,3]==i))
ratings_male[i] = length(which(ratings[,3]==i & rating_gender=='M'))
ratings_female[i] = length(which(ratings[,3]==i & rating_gender=='F'))
}
ratings_total = ratings_total / sum(ratings_total)
ratings_male = ratings_male / sum(ratings_male)
ratings_female = ratings_female / sum(ratings_female)
r_t = c(ratings_total, ratings_male, ratings_female)
ylim = c(min(r_t), max(r_t))
plot(1:10,ratings_total, type='o', col='black', main="Distribution of Ratings", xlab="Rating", ylab="Count", ylim=ylim)
lines(1:10, ratings_male, type='o', col='red')
lines(1:10, ratings_female, type='o', col='blue')
smartlegend(x="right",y="top", c('Total','Male','Female'), lty=c(1,1,1), col=c('black','red','blue'))
# NUMBER OF RATINGS vs AVERAGE RATING
Pnum = apply(rmat!=0,2,sum)
Psum = apply(rmat,2,sum)
Pmeans = Psum / Pnum
plot(Pn
)
plot(Pnum, Pmeans, main='Number of ratings vs Average Rating', xlab='Number of Ratings', ylab='Average Rating', pch=19)
ind = which(Pnum>=1000,arr.ind=TRUE)
plot(Pnum[ind], Pmeans[ind], main='Number of ratings vs Average Rating', xlab='Number of Ratings', ylab='Average Rating', pch=19)
cor(Pnum[ind], Pmeans[ind])
correlation = cor(Pnum,Pmeans)
correlation
ind = which(Pnum<=1000,arr.ind=TRUE)
plot(Pnum[ind], Pmeans[ind], main='Number of ratings vs Average Rating', xlab='Number of Ratings', ylab='Average Rating', pch=19)
cor(Pnum[ind], Pmeans[ind])
ind = which(Pnum<=1000 & Pnum>=600,arr.ind=TRUE)
cor(Pnum[ind], Pmeans[ind])
plot(Pnum[ind], Pmeans[ind], main='Number of ratings vs Average Rating', xlab='Number of Ratings', ylab='Average Rating', pch=19)
Pnum = apply(rmat!=0,2,sum)
Psum = apply(rmat,2,sum)
Pmeans = Psum / Pnum
correlation = cor(Pnum,Pmeans)
plot(Pnum, Pmeans, main=c('Number of Ratings vs Average Rating\nCorr=',str(correlation)), xlab='Number of Ratings', ylab='Average Rating', pch=19)
c('Number of Ratings vs Average Rating\nCorr=',str(correlation))
c('Number of Ratings vs Average Rating\nCorr=',correlation)
sprintf("Number of Ratings vs Average Rating %.03f", correlation)
sprintf("Number of Ratings vs Average Rating\nCorr=%.03f", correlation)
titleStr = sprintf("Number of Ratings vs Average Rating\nCorr=%.03f", correlation)
plot(Pnum, Pmeans, main=titleStr, xlab='Number of Ratings', ylab='Average Rating', pch=19)
p_male <- apply(rmat[which(gender[,2]!='U'),],2,sum) / apply(rmat[which(gender[,2]=='M'),],2,sum)
ggplot(p_male)
p_male <- apply(rmat[which(gender[,2]=='M'),],2,sum) / apply(rmat[which(gender[,2]!='U'),],2,sum)
p_male = data.frame(per=p_male)
p_male$a = 'Profiles'
ggplot(p_male, aes(per, fill = a)) + geom_density(alpha = 0.2) + labs(title="Male Ratings", x="Percent Male Ratings", y="Density")
length(p_male$per)
setwd("~/Documents/Rice/senior/HashTagSwipeRight/analytics")
source("analytics.R")
rm(list=ls())
plot(1:10,ratings_total, type='o', col='black', main="Distribution of Ratings", xlab="Rating", ylab="Count", ylim=ylim)
source("analytics.R")
ggplot(num_rat, aes(num, fill = a)) + geom_density(alpha = 0.2) + labs(title="Number of Profiles Rated", x="Profiles Rated", y="Density")
ggplot(num_rat, aes(num, fill = a)) + geom_density(alpha = 0.2) + labs(title="Number of Profiles Rated", x="Profiles Rated", y="Density") + xlim(0,500)
ggplot(p_male, aes(per, fill = a)) + geom_density(alpha = 0.2) + labs(title="Male Ratings", x="Percent Male Ratings", y="Density")
